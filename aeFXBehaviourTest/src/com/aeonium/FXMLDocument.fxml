<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.scene.control.Button?>
<?import javafx.scene.control.CheckBox?>
<?import javafx.scene.control.ContextMenu?>
<?import javafx.scene.control.CustomMenuItem?>
<?import javafx.scene.control.Label?>
<?import javafx.scene.control.MenuItem?>
<?import javafx.scene.control.SplitPane?>
<?import javafx.scene.control.Tab?>
<?import javafx.scene.control.TabPane?>
<?import javafx.scene.control.TextArea?>
<?import javafx.scene.control.TextField?>
<?import javafx.scene.layout.AnchorPane?>
<?import javafx.scene.layout.VBox?>
<?import javafx.scene.text.Text?>

<VBox prefHeight="426.0" prefWidth="534.0" xmlns="http://javafx.com/javafx/8.0.141" xmlns:fx="http://javafx.com/fxml/1" fx:controller="com.aeonium.FXMLDocumentController">
  <children>
    <SplitPane dividerPositions="0.6593137254901961" orientation="VERTICAL" VBox.vgrow="ALWAYS">
      <items>
        <TabPane id="tabPane" prefHeight="200.0" prefWidth="200.0" tabClosingPolicy="UNAVAILABLE" VBox.vgrow="ALWAYS">
          <tabs>
            <Tab id="tabGrabber" closable="false" text="System.out Grabber">
              <content>
                <AnchorPane minHeight="0.0" minWidth="0.0" prefHeight="180.0" prefWidth="200.0">
                  <children>
                    <Button fx:id="button" layoutX="20.0" layoutY="20.0" onAction="#handleButtonAction" text="Print to Console ..." AnchorPane.leftAnchor="20.0" AnchorPane.topAnchor="20.0" />
                              <Label alignment="TOP_LEFT" layoutX="230.0" layoutY="25.0" prefHeight="85.0" prefWidth="282.0" text="The GrabSystemOutBehaviour can be attached to a TextArea component and makes it catch and display all System.out messages. Hover over or click the button to try." wrapText="true" AnchorPane.leftAnchor="230.0" AnchorPane.rightAnchor="20.0" AnchorPane.topAnchor="25.0" />
                  </children>
                </AnchorPane>
              </content>
            </Tab>
            <Tab id="tabAutocomplete" closable="false" text="Autocomplete">
              <content>
                <AnchorPane minHeight="0.0" minWidth="0.0" prefHeight="180.0" prefWidth="200.0">
                  <children>
                    <TextField fx:id="tfAutoComplete1" layoutX="20.0" layoutY="20.0" />
                    <Label alignment="TOP_LEFT" layoutX="230.0" layoutY="25.0" prefHeight="31.0" prefWidth="270.0" text="TextField with Autocomplete-Behaviour 1" wrapText="true" />
                    <TextField fx:id="tfAutoComplete2" layoutX="20.0" layoutY="80.0" />
                    <Label alignment="TOP_LEFT" layoutX="230.0" layoutY="85.0" prefHeight="31.0" prefWidth="270.0" text="TextField with Autocomplete-Behaviour 2" wrapText="true" />
                    <TextField fx:id="tfAutoComplete3" layoutX="20.0" layoutY="140.0" />
                    <Label alignment="TOP_LEFT" layoutX="230.0" layoutY="145.0" prefHeight="31.0" prefWidth="270.0" text="TextField with Autocomplete-Behaviour 3" wrapText="true" />
                  </children>
                </AnchorPane>
              </content>
            </Tab>
            <Tab text="Stage &amp; Window">
              <content>
                <AnchorPane minHeight="0.0" minWidth="0.0" prefHeight="180.0" prefWidth="200.0">
                  <children>
                    <Button fx:id="btHideOnEscape" layoutX="20.0" layoutY="20.0" text="Set focus and press ESCAPE" AnchorPane.topAnchor="20.0" />
                    <Text fontSmoothingType="LCD" layoutX="258.0" layoutY="25.0" strokeType="OUTSIDE" strokeWidth="0.0" text="Normally, you would apply the HideOnEscapeBehaviour class on the main container of the UI or on the root node of the scene. &#10;" wrappingWidth="247.0" AnchorPane.leftAnchor="250.0" AnchorPane.rightAnchor="20.0" AnchorPane.topAnchor="25.0" />
                    
                    <Label fx:id="lbDragWindow" layoutX="18.0" layoutY="100.0" prefHeight="64.0" prefWidth="93.0" text="Grab here &amp; drag Window" wrapText="true" />
                              <Text fontSmoothingType="LCD" layoutX="250.0" layoutY="126.0" strokeType="OUTSIDE" strokeWidth="0.0" text="The DragWindowBehaviour lets you turn a node into a handles for moving the whole window around." wrappingWidth="247.0" />  
                  </children>
                </AnchorPane>
              </content>
            </Tab>
            <Tab closable="false" text="Context Menu">
              <content>
                <AnchorPane minHeight="0.0" minWidth="0.0" prefHeight="180.0" prefWidth="200.0">
                           <children>
                              <Button fx:id="buttonWithContextMenu" layoutX="25.0" layoutY="25.0" mnemonicParsing="false" prefHeight="26.0" prefWidth="206.0" text="Button with context menu ..." AnchorPane.leftAnchor="20.0" AnchorPane.topAnchor="20.0">
                                 <contextMenu>
                                    <ContextMenu>
                                      <items>
                                        <MenuItem mnemonicParsing="false" text="Unspecified Action" />
                                          <CustomMenuItem mnemonicParsing="false" text="Unspecified Action">
                                            <content>
                                              <CheckBox text="Click Me" />
                                            </content>
                                          </CustomMenuItem>
                                      </items>
                                    </ContextMenu>
                                 </contextMenu>
                              </Button>
                              <Text fontSmoothingType="LCD" layoutX="250.0" strokeType="OUTSIDE" strokeWidth="0.0" text="The ContextMenuBehaviour lets you invoke context menues with the context menu key. Normally, they would not appear so simply by themselves ..." wrappingWidth="247.0" AnchorPane.topAnchor="25.0" />
                           </children></AnchorPane>
              </content>
            </Tab>
                  <Tab closable="false" text="Transitions">
                    <content>
                      <AnchorPane minHeight="0.0" minWidth="0.0" prefHeight="180.0" prefWidth="200.0">
                           <children>
                              <Label fx:id="nodeToggleVisibility0" alignment="CENTER" contentDisplay="CENTER" layoutX="14.0" layoutY="14.0" prefHeight="50.0" prefWidth="200.0" style="-fx-background-color: #ccc;" text="Some Node ..." textAlignment="CENTER" wrapText="true" AnchorPane.topAnchor="20.0" />
                              <CheckBox fx:id="cbToggleVisibility0" alignment="TOP_LEFT" layoutX="243.0" layoutY="14.0" mnemonicParsing="false" prefWidth="228.0" selected="true" text="Toggle visibility of the node, using property bindings. Fading out will get hidden." wrapText="true" AnchorPane.topAnchor="20.0" />
                              <CheckBox fx:id="cbToggleVisibility1" alignment="TOP_LEFT" layoutX="243.0" layoutY="89.0" mnemonicParsing="false" prefWidth="228.0" selected="true" text="Toggle visibility of the node, using a property listener. Fading out can be made visible." wrapText="true" />
                              <Label fx:id="nodeToggleVisibility1" alignment="CENTER" contentDisplay="CENTER" layoutX="14.0" layoutY="89.0" prefHeight="50.0" prefWidth="200.0" style="-fx-background-color: #ccc;" text="Some Node ..." textAlignment="CENTER" wrapText="true" />
                              <CheckBox fx:id="cbToggleVisibility2" alignment="TOP_LEFT" layoutX="243.0" layoutY="164.0" mnemonicParsing="false" prefWidth="228.0" selected="true" text="Toggle visibility of a node in a VBoxLayout." wrapText="true" />
                              <VBox layoutX="14.0" layoutY="164.0" prefHeight="58.0" prefWidth="200.0" AnchorPane.bottomAnchor="10.0" AnchorPane.leftAnchor="14.0" AnchorPane.topAnchor="164.0">
                                 <children>
                                    <Label alignment="CENTER" contentDisplay="CENTER" prefHeight="20.0" prefWidth="200.0" style="-fx-background-color: #ccc;" text="Some Node ..." textAlignment="CENTER" wrapText="true" />
                                    <Label fx:id="nodeToggleVisibility2" alignment="CENTER" contentDisplay="CENTER" layoutX="10.0" layoutY="10.0" prefHeight="20.0" prefWidth="200.0" style="-fx-background-color: #ccc;" text="A Node to toggle ..." textAlignment="CENTER" wrapText="true" />
                                    <Label alignment="CENTER" contentDisplay="CENTER" layoutX="10.0" layoutY="10.0" prefHeight="20.0" prefWidth="200.0" style="-fx-background-color: #ccc;" text="Some Node ..." textAlignment="CENTER" wrapText="true" />
                                 </children>
                              </VBox>
                           </children>
                        </AnchorPane>
                    </content>
                  </Tab>
                  <Tab closable="false" text="Effects">
                    <content>
                      <AnchorPane minHeight="0.0" minWidth="0.0" prefHeight="180.0" prefWidth="200.0">
                           <children>
                              <Label fx:id="nodeHoverScale" alignment="CENTER" contentDisplay="CENTER" layoutX="14.0" layoutY="14.0" prefHeight="50.0" prefWidth="200.0" style="-fx-background-color: #ccc;" text="Hover me ..." textAlignment="CENTER" wrapText="true" AnchorPane.leftAnchor="20.0" AnchorPane.topAnchor="20.0" />
                              <Label fx:id="nodeHoverScale1" alignment="CENTER" contentDisplay="CENTER" layoutX="20.0" layoutY="80.0" prefHeight="50.0" prefWidth="200.0" style="-fx-background-color: #ccc;" text="Hover me ..." textAlignment="CENTER" wrapText="true" />
                              <Text fontSmoothingType="LCD" layoutX="257.0" layoutY="32.0" strokeType="OUTSIDE" strokeWidth="0.0" text="The HoverScaleBehaviour is a simply example for behavioural animations. Like this, you can very easily implement and reuse any effect you like." wrappingWidth="247.0" AnchorPane.rightAnchor="20.0" AnchorPane.topAnchor="20.0" />
<!--                              <CheckBox fx:id="cbToggleVisibility0" alignment="TOP_LEFT" layoutX="243.0" layoutY="14.0" mnemonicParsing="false" prefWidth="228.0" selected="true" text="Toggle visibility of the node, using property bindings. Fading out will get hidden." wrapText="true" />
                              <CheckBox fx:id="cbToggleVisibility1" alignment="TOP_LEFT" layoutX="243.0" layoutY="84.0" mnemonicParsing="false" prefWidth="228.0" selected="true" text="Toggle visibility of the node, using a property listener. Fading out can be made visible." wrapText="true" />
                              <Label fx:id="nodeToggleVisibility1" alignment="CENTER" contentDisplay="CENTER" layoutX="14.0" layoutY="84.0" prefHeight="50.0" prefWidth="200.0" style="-fx-background-color: #ccc;" text="Some Node ..." textAlignment="CENTER" wrapText="true" />
                              <CheckBox fx:id="cbToggleVisibility2" alignment="TOP_LEFT" layoutX="243.0" layoutY="164.0" mnemonicParsing="false" prefWidth="228.0" selected="true" text="Toggle visibility of a node in a VBoxLayout." wrapText="true" />
                              <VBox layoutX="14.0" layoutY="164.0" prefHeight="58.0" prefWidth="200.0" AnchorPane.bottomAnchor="10.0" AnchorPane.leftAnchor="14.0" AnchorPane.topAnchor="164.0">
                                 <children>
                                    <Label alignment="CENTER" contentDisplay="CENTER" prefHeight="20.0" prefWidth="200.0" style="-fx-background-color: #ccc;" text="Some Node ..." textAlignment="CENTER" wrapText="true" />
                                    <Label fx:id="nodeToggleVisibility2" alignment="CENTER" contentDisplay="CENTER" layoutX="10.0" layoutY="10.0" prefHeight="20.0" prefWidth="200.0" style="-fx-background-color: #ccc;" text="A Node to toggle ..." textAlignment="CENTER" wrapText="true" />
                                    <Label alignment="CENTER" contentDisplay="CENTER" layoutX="10.0" layoutY="10.0" prefHeight="20.0" prefWidth="200.0" style="-fx-background-color: #ccc;" text="Some Node ..." textAlignment="CENTER" wrapText="true" />
                                 </children>
                              </VBox>-->
                           </children>
                        </AnchorPane>
                    </content>
                  </Tab>
          </tabs>
        </TabPane>
        <TextArea fx:id="textArea" prefHeight="200.0" prefWidth="200.0" />
      </items>
    </SplitPane>
    <Label fx:id="label" layoutX="126" layoutY="120" minHeight="16" minWidth="69" VBox.vgrow="NEVER" />
  </children>
</VBox>
